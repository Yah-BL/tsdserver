{"version":3,"file":"tsdserver.js","sources":["../src/Utils.ts","../src/Alias.ts","../src/DefaultModuleResolver.ts","../src/ImportUpdater.ts","../src/RequestHandler.ts","../src/Server.ts"],"sourcesContent":["import fs from 'fs';\r\nimport { isArray, isString } from 'util';\r\n\r\nexport function fileExists(path: string): boolean {\r\n  const stats = fileStats(path);\r\n  return stats !== null && stats.isFile();\r\n}\r\n\r\nexport function fileStats(path: string): fs.Stats | null {\r\n  try {\r\n    return fs.statSync(path, { bigint: false }) as fs.Stats;\r\n  } catch (e) {\r\n    if (e.code !== 'ENOENT') throw e;\r\n    return null;\r\n  }\r\n}\r\n\r\nexport function isStringArray(obj: any): obj is string[] {\r\n  if (isArray(obj)) {\r\n    return obj.every(e => isString(e));\r\n  }\r\n  return false;\r\n}\r\n\r\nexport function replaceMatches(s: string, matches: RegExpMatchArray): string {\r\n  let res = s;\r\n  for (let index = 0; index < matches.length; index++) {\r\n    res = s.replace('$' + index, matches[index]);\r\n  }\r\n  return res;\r\n}\r\n","import { Alias, AliasOptions } from './tsdserver';\r\nimport { isArray, isObject, isString, isRegExp } from 'util';\r\n\r\ntype AliasValueReplacer<T> = (value: T, matches: RegExpMatchArray) => T;\r\n\r\nexport class AliasResolver<T> {\r\n  private readonly replacer: AliasValueReplacer<T>;\r\n  private readonly aliases: Alias<T>[] = [];\r\n  constructor(param: AliasOptions<T>, replacer: AliasValueReplacer<T>) {\r\n    this.replacer = replacer;\r\n    let aliases: Alias<T>[];\r\n    if (isArray(param)) {\r\n      aliases = param;\r\n    } else {\r\n      aliases = [];\r\n      for (const key in param) {\r\n        aliases.push({\r\n          find: name,\r\n          replacement: param[key]\r\n        });\r\n      }\r\n    }\r\n    this.aliases = aliases;\r\n  }\r\n\r\n  resolve(name: string): T | undefined {\r\n    for (const alias of this.aliases) {\r\n      if (alias.find === name) {\r\n        return alias.replacement;\r\n      }\r\n\r\n      if (alias.find instanceof RegExp) {\r\n        const matches = name.match(alias.find);\r\n        if (matches) {\r\n          return this.replacer(alias.replacement, matches);\r\n        }\r\n      }\r\n    }\r\n    return undefined;\r\n  }\r\n}\r\n\r\nexport function isAliasOptions<T>(obj: any, isElement: (e: any) => e is T): obj is AliasOptions<T> {\r\n  if (isArray(obj)) return obj.every(a => isAlias(a, isElement));\r\n  if (isObject(obj)) return Object.keys(obj).every(k => isString(k)) && Object.values(obj).every(v => isElement(v));\r\n  return false;\r\n}\r\n\r\nexport function isAlias<T>(obj: any, isElement: (e: any) => e is T): obj is Alias<T> {\r\n  if (isObject(obj)) {\r\n    const alias = obj as Alias<T>;\r\n    if (isString(alias.find) || isRegExp(alias.find)) return false;\r\n    return isElement(alias.replacement);\r\n  }\r\n  return false;\r\n}\r\n","import path from 'path';\r\nimport fs from 'fs';\r\n\r\nimport { DefaultModuleResolverOptions, ModuleResolver, Alias } from './tsdserver';\r\nimport { fileExists, replaceMatches } from './Utils';\r\nimport { AliasResolver, isAlias, isAliasOptions } from './Alias';\r\nimport { isObject, isString } from 'util';\r\n\r\nexport function isModuleAlias(obj: any): obj is Alias<string> {\r\n  return isAlias(obj, (e): e is string => isString(e));\r\n}\r\n\r\nexport function isDefaultModuleResolverOptions(obj: any): obj is DefaultModuleResolverOptions {\r\n  if (isObject(obj) && obj.alias) {\r\n    const alias = (obj as DefaultModuleResolverOptions).alias;\r\n    return isAliasOptions(alias, (e): e is string => isString(e));\r\n  }\r\n  return false;\r\n}\r\n\r\nexport function defaultResolver(options?: DefaultModuleResolverOptions): ModuleResolver {\r\n  if (!options || !options.alias || options.alias.length == 0) {\r\n    return name => name;\r\n  }\r\n\r\n  const aliaser = new AliasResolver<string>(options.alias, replaceMatches);\r\n  return name => {\r\n    name = aliaser.resolve(name) || name;\r\n    const packageFile = path.join('node_modules', name, 'package.json');\r\n    if (fileExists(packageFile)) {\r\n      const npmPackage = JSON.parse(fs.readFileSync(packageFile, { encoding: 'utf-8' }));\r\n      let file = npmPackage['module'] || npmPackage['main'];\r\n      if (typeof file === 'string') {\r\n        if (fileExists(path.join('node_modules', name, file))) {\r\n          return '/' + path.posix.join(name, file);\r\n        }\r\n      }\r\n    }\r\n    return '/' + name;\r\n  };\r\n}\r\n","import acorn from 'acorn';\r\nimport walk from 'acorn-walk';\r\nimport { defaultResolver } from './DefaultModuleResolver';\r\nimport { isFunction } from 'util';\r\nimport { ModuleResolver, Options } from './tsdserver';\r\n\r\nfunction isModuleResolver(obj: any): obj is ModuleResolver {\r\n  return isFunction(obj);\r\n}\r\n\r\nexport class JSImportUpdater {\r\n  readonly sourceType: 'script' | 'module';\r\n  readonly ecmaVersion: 3 | 5 | 6 | 7 | 8 | 9 | 10 | 11 | 2015 | 2016 | 2017 | 2018 | 2019 | 2020;\r\n  readonly moduleResolver: ModuleResolver;\r\n\r\n  constructor(options?: Options) {\r\n    options = options || {};\r\n    this.sourceType = options.sourceType || 'module';\r\n    this.ecmaVersion = options.ecmaVersion || 2020;\r\n    if (isModuleResolver(options.resolveModule)) {\r\n      this.moduleResolver = options.resolveModule;\r\n    } else {\r\n      this.moduleResolver = defaultResolver(options.resolveModule);\r\n    }\r\n  }\r\n\r\n  update(code: string): string {\r\n    const parsed = acorn.parse(code, {\r\n      sourceType: this.sourceType,\r\n      ecmaVersion: this.ecmaVersion,\r\n      ranges: true\r\n    });\r\n\r\n    let newCode = '';\r\n    let offset = 0;\r\n\r\n    const visitor = (node: acorn.Node): void => {\r\n      if (!isImportNode(node)) throw new Error('Not an import node');\r\n      if (!node.source.range) throw new Error('No range');\r\n\r\n      let name = node.source.value;\r\n      if (!name) return;\r\n\r\n      if (!isRelativeModule(name)) {\r\n        name = this.moduleResolver(name);\r\n      }\r\n\r\n      if (!name.endsWith('.js')) name += '.js';\r\n\r\n      if (name !== node.source.value) {\r\n        newCode += code.substring(offset, node.source.range[0]);\r\n        newCode += '\"' + name + '\"';\r\n        offset = node.source.range[1];\r\n      }\r\n    };\r\n\r\n    walk.simple(parsed, {\r\n      ImportDeclaration: visitor,\r\n      ImportExpression: visitor\r\n    });\r\n\r\n    if (offset < code.length) {\r\n      newCode += code.substring(offset, code.length);\r\n    }\r\n\r\n    return newCode;\r\n  }\r\n}\r\n\r\ninterface ImportNode extends acorn.Node {\r\n  source: LiteralNode;\r\n}\r\n\r\ninterface LiteralNode extends acorn.Node {\r\n  value?: string;\r\n}\r\n\r\nfunction isImportNode(node?: acorn.Node): node is ImportNode {\r\n  return node !== undefined && (node as ImportNode).source !== undefined;\r\n}\r\n\r\nfunction isRelativeModule(name: string) {\r\n  return name.startsWith('/') || name.startsWith('./') || name.startsWith('../');\r\n}\r\n","import { IncomingMessage, ServerResponse, OutgoingHttpHeaders, RequestListener } from 'http';\r\nimport url from 'url';\r\nimport fs, { Stats } from 'fs';\r\nimport path from 'path';\r\nimport mime from 'mime-types';\r\nimport { JSImportUpdater } from './ImportUpdater';\r\nimport { fileStats, isStringArray, replaceMatches } from './Utils';\r\nimport { Options, FileNameResolver, AliasOptions } from './tsdserver';\r\nimport { isArray, isString, isFunction } from 'util';\r\nimport { AliasResolver, isAliasOptions } from './Alias';\r\n\r\nexport class ResolvedFile {\r\n  readonly requestPath: string; // requested path\r\n  readonly file: string; // resolved resource name\r\n  readonly stats: Stats;\r\n  readonly mimeType?: string;\r\n  constructor(requestPath: string, file: string, stats: Stats) {\r\n    this.requestPath = requestPath;\r\n    this.file = file;\r\n    this.stats = stats;\r\n    this.mimeType = mime.lookup(path.extname(this.requestPath)) || undefined;\r\n  }\r\n\r\n  isUpToDate(message: IncomingMessage): boolean {\r\n    const fileDate = this.stats.mtime;\r\n    let header = message.headers['if-match'];\r\n    if (header !== undefined) {\r\n      const time = parseInt(header);\r\n      if (!isNaN(time)) {\r\n        return fileDate.getTime() === time;\r\n      }\r\n    }\r\n    header = message.headers['if-modified-since'];\r\n    if (header) {\r\n      const time = Date.parse(header);\r\n      if (!isNaN(time)) {\r\n        const fileTime = Math.floor(fileDate.getTime() / 1000);\r\n        const requestTime = Math.floor(time / 1000);\r\n        return fileTime === requestTime;\r\n      }\r\n    }\r\n    return false;\r\n  }\r\n\r\n  async write(response: ServerResponse, jsUpdater: JSImportUpdater): Promise<void> {\r\n    const headers: OutgoingHttpHeaders = {};\r\n    if (this.mimeType) headers['Content-Type'] = this.mimeType;\r\n    headers['Last-Modified'] = this.stats.mtime.toUTCString();\r\n    headers['ETag'] = this.stats.mtime.getTime();\r\n    headers['Cache-Control'] = 'no-cache, max-age=0';\r\n    response.writeHead(200, headers);\r\n    if (this.requestedJS) {\r\n      let code = await this.readText(this.file);\r\n      if (!this.resolvedJS) {\r\n        code = this.wrapResource(code);\r\n      } else {\r\n        code = jsUpdater.update(code);\r\n      }\r\n      return this.writeText(code, response);\r\n    } else {\r\n      return this.stream(this.file, response);\r\n    }\r\n  }\r\n\r\n  private get requestedJS(): boolean {\r\n    return this.requestPath.endsWith('.js');\r\n  }\r\n\r\n  private get resolvedJS(): boolean {\r\n    return this.file.endsWith('.js');\r\n  }\r\n\r\n  private wrapResource(code: string): string {\r\n    return 'export default `' + code + '`;\\r\\n';\r\n  }\r\n\r\n  private async stream(path: string, out: ServerResponse): Promise<void> {\r\n    return new Promise(resolve => {\r\n      const stream = fs.createReadStream(path);\r\n      stream.on('end', resolve);\r\n      stream.on('error', resolve);\r\n      stream.pipe(out, { end: false });\r\n    });\r\n  }\r\n\r\n  private async writeText(data: string, out: ServerResponse): Promise<void> {\r\n    return new Promise((resolve, reject) => {\r\n      out.on('error', reject);\r\n      out.write(data, 'utf-8', e => {\r\n        if (e) reject(e);\r\n        else resolve();\r\n      });\r\n    });\r\n  }\r\n\r\n  private async readText(path: string): Promise<string> {\r\n    return new Promise((resolve, reject) => {\r\n      fs.readFile(path, { encoding: 'utf-8' }, (err, data) => {\r\n        if (err) reject(err);\r\n        else resolve(data);\r\n      });\r\n    });\r\n  }\r\n}\r\n\r\nfunction isFileResolver(obj: any): obj is FileResolver {\r\n  return isFunction(obj);\r\n}\r\n\r\nfunction isFileAliasOptions(obj: any): obj is AliasOptions<string | string[]> {\r\n  return isAliasOptions(obj, (e): e is AliasOptions<string | string[]> => isString(e) || isStringArray(e));\r\n}\r\n\r\nclass FileResolver {\r\n  private readonly options: Options;\r\n  private readonly resolver: (name: string) => string[] | string | undefined;\r\n\r\n  constructor(options: Options) {\r\n    this.options = options;\r\n    const option = this.options.mapFileName;\r\n    if (!option) this.resolver = () => undefined;\r\n    else if (isFileResolver(option)) {\r\n      this.resolver = option as FileNameResolver;\r\n    } else if (isFileAliasOptions(option)) {\r\n      const aliaser = new AliasResolver<string | string[]>(option, (value, matches) => {\r\n        if (isString(value)) return replaceMatches(value, matches);\r\n        return value.map(v => replaceMatches(v, matches));\r\n      });\r\n      this.resolver = n => aliaser.resolve(n);\r\n    } else {\r\n      console.error('Invalid mapFileName options');\r\n      this.resolver = () => undefined;\r\n    }\r\n  }\r\n\r\n  resolve(requestPath: string): ResolvedFile | undefined {\r\n    const resolved = this.resolver(requestPath);\r\n    let fileNames;\r\n\r\n    if (!resolved) fileNames = [requestPath];\r\n    else if (isString(resolved)) fileNames = [resolved];\r\n    else fileNames = resolved;\r\n\r\n    const directories = new Set<string>();\r\n    if (this.options.directories) {\r\n      this.options.directories.map(d => path.resolve(d)).forEach(d => directories.add(d));\r\n    }\r\n    directories.add(path.resolve('.'));\r\n    directories.add(path.resolve('node_modules'));\r\n\r\n    for (const name of fileNames) {\r\n      for (const directory of directories) {\r\n        let file = path.resolve(directory, name);\r\n        const stats = fileStats(file);\r\n        if (stats != null) {\r\n          return new ResolvedFile(requestPath, file, stats);\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nfunction extractPath(requestUrl: string): string | null {\r\n  let requestPath = url.parse(requestUrl).pathname;\r\n  if (requestPath) {\r\n    if (requestPath.startsWith('/')) requestPath = requestPath.substring(1);\r\n    requestPath = decodeURI(requestPath);\r\n  }\r\n  return requestPath;\r\n}\r\n\r\nexport function createTSDRequestListener(options: Options): RequestListener {\r\n  const fileResolver = new FileResolver(options);\r\n  const jsUpdater = new JSImportUpdater(options);\r\n\r\n  return async (message, response) => {\r\n    if (message.method !== 'GET') {\r\n      response.writeHead(405, { Allow: 'GET' });\r\n      response.end();\r\n      return;\r\n    }\r\n\r\n    if (!message.url) {\r\n      response.writeHead(500, 'no url');\r\n      response.end();\r\n      return;\r\n    }\r\n\r\n    let requestPath = extractPath(message.url) || options.welcome || 'index.html';\r\n    const file = fileResolver.resolve(requestPath);\r\n    if (file) {\r\n      if (file.isUpToDate(message)) {\r\n        response.writeHead(304, {});\r\n      } else {\r\n        try {\r\n          await file.write(response, jsUpdater);\r\n        } catch (e) {\r\n          console.error('Error sending response for ' + requestPath, file, e);\r\n        }\r\n      }\r\n    } else {\r\n      console.info('Resource not found \"' + requestPath + '\"');\r\n      response.writeHead(404, `${requestPath} not found`);\r\n    }\r\n    response.end();\r\n  };\r\n}\r\n","import arg from 'arg';\r\n\r\nimport path from 'path';\r\n\r\nimport serve, { RequestHandler } from 'micro';\r\nimport { version } from '../package.json';\r\n\r\nimport { Server } from 'http';\r\nimport { AddressInfo } from 'net';\r\nimport { createTSDRequestListener } from './RequestHandler';\r\nimport { isObject, isArray, isNumber, isFunction, isString } from 'util';\r\n\r\nimport { fileExists, isStringArray } from './Utils';\r\n\r\nimport { Options } from './tsdserver';\r\nimport { isAlias, isAliasOptions } from './Alias';\r\nimport { isDefaultModuleResolverOptions } from './DefaultModuleResolver';\r\n\r\nconst HELP_MESSAGE = `\r\ntsdserver - Asynchronous HTTP resources for typescript web testing.\r\nUSAGE\r\n\r\n    $ tsdserver --help\r\n    $ tsdserver --version\r\n    $ tsdserver [-l listen_uri [-l ...]] [js or json config]\r\n\r\n    By default tsdserver will listen on 0.0.0.0:3000 and will look for\r\n    a \"tsdserver.config.js\" or \"tsdserver.json\" file in project directory.\r\n\r\n    Specifying a single --listen argument will overwrite the default, not supplement it.\r\n\r\nOPTIONS\r\n\r\n    --help                              shows this help message\r\n\r\n    -v, --version                       displays the current version of tsdserver\r\n\r\n    -l, --listen listen_uri             specify a URI endpoint on which to listen (see below) -\r\n                                        more than one may be specified to listen in multiple places\r\n\r\nENDPOINTS\r\n\r\n    Listen endpoints (specified by the --listen or -l options above) instruct tsdserver\r\n    to listen on one or more interfaces/ports, UNIX domain sockets, or Windows named pipes.\r\n\r\n    For TCP (traditional host/port) endpoints:\r\n\r\n        $ tsdserver -l tcp://hostname:1234\r\n\r\n    For UNIX domain socket endpoints:\r\n\r\n        $ tsdserver -l unix:/path/to/socket.sock\r\n\r\n    For Windows named pipe endpoints:\r\n\r\n        $ tsdserver -l pipe:\\\\\\\\.\\\\pipe\\\\PipeName\r\n`;\r\n\r\ntype EndPoint = (server: Server, listener: () => void) => void;\r\n\r\nfunction parseEndpoint(value: string, name: string): EndPoint {\r\n  const url = new URL(value);\r\n  switch (url.protocol) {\r\n    case 'pipe:': {\r\n      // some special handling\r\n      const cutStr = value.replace(/^pipe:/, '');\r\n      if (cutStr.slice(0, 4) !== '\\\\\\\\.\\\\') {\r\n        throw new Error(`Invalid Windows named pipe endpoint: ${value}`);\r\n      }\r\n      //return [cutStr];\r\n      return (s, listener) => s.listen(cutStr, listener);\r\n    }\r\n    case 'unix:':\r\n      if (!url.pathname) {\r\n        throw new Error(`Invalid UNIX domain socket endpoint: ${value}`);\r\n      }\r\n      return (s, listener) => s.listen(url.pathname, listener);\r\n    case 'tcp:':\r\n      url.port = url.port || '3000';\r\n      return (s, listener) => s.listen(parseInt(url.port), url.hostname, listener);\r\n    default:\r\n      throw new Error(`Unknown --listen endpoint scheme (protocol): ${url.protocol}`);\r\n  }\r\n}\r\n\r\nfunction isAddressInfo(o: any): o is AddressInfo {\r\n  return typeof o === 'object' && (o as AddressInfo).port !== undefined;\r\n}\r\n\r\nfunction isServerOptions(obj: any): obj is Options {\r\n  if (!isObject(obj)) {\r\n    console.error('options is not an object', obj);\r\n    return false;\r\n  }\r\n\r\n  const options = obj as Options;\r\n  if (options.directories) {\r\n    if (!isArray(options.directories)) {\r\n      console.error('options.directories is not an array', options.directories);\r\n      return false;\r\n    }\r\n\r\n    if (!options.directories.every(d => isString(d))) {\r\n      console.error('options.directories contains invalid type, expeccted only string', options.directories);\r\n      return false;\r\n    }\r\n  }\r\n\r\n  if (options.ecmaVersion && !isNumber(options.ecmaVersion)) {\r\n    // TODO : improve check by restricting to ecmaVersion values\r\n    console.error('options.ecmaVersion has an invalid value', options.ecmaVersion);\r\n    return false;\r\n  }\r\n\r\n  if (options.sourceType && options.sourceType !== 'module' && options.sourceType !== 'script') {\r\n    console.error('options.sourceType has an invalid value', options.sourceType);\r\n    return false;\r\n  }\r\n\r\n  if (\r\n    options.mapFileName &&\r\n    !isAliasOptions(options.mapFileName, (e): e is string | string[] => isString(e) || isStringArray(e)) &&\r\n    !isFunction(options.mapFileName)\r\n  ) {\r\n    console.error('options.mapFileName has an invalid type: ' + typeof options.mapFileName, options.mapFileName);\r\n    return false;\r\n  }\r\n\r\n  if (\r\n    options.resolveModule !== undefined &&\r\n    !isDefaultModuleResolverOptions(options.resolveModule) &&\r\n    !isFunction(options.resolveModule)\r\n  ) {\r\n    console.error('options.resolveModule is invalid', options.resolveModule);\r\n    return false;\r\n  }\r\n  return true;\r\n}\r\n\r\nasync function loadOptions(files: string[]): Promise<Options | null> {\r\n  for (let file of files) {\r\n    if (!path.isAbsolute(file)) file = path.resolve(file);\r\n    if (fileExists(file)) {\r\n      let obj;\r\n      try {\r\n        obj = await require(file);\r\n      } catch (e) {\r\n        console.error('Error loading options file ' + file, e);\r\n      }\r\n      if (isServerOptions(obj)) {\r\n        console.info('Using options file ' + file);\r\n        return obj;\r\n      }\r\n    }\r\n  }\r\n  return null;\r\n}\r\n\r\nasync function parseCommandLine(): Promise<{ endpoints: EndPoint[]; options: Options }> {\r\n  // Check if the user defined any options\r\n  const args = arg({\r\n    '--listen': [parseEndpoint],\r\n    '-l': '--listen',\r\n\r\n    '--help': Boolean,\r\n\r\n    '--version': Boolean,\r\n    '-v': '--version'\r\n  });\r\n\r\n  // When `-h` or `--help` are used, print out\r\n  // the usage information\r\n  if (args['--help']) {\r\n    console.error(HELP_MESSAGE);\r\n    process.exit(2);\r\n  }\r\n\r\n  // Print out the package's version when\r\n  // `--version` or `-v` are used\r\n  if (args['--version']) {\r\n    console.log(version);\r\n    process.exit();\r\n  }\r\n\r\n  let endpoints: EndPoint[];\r\n  if (!args['--listen'] || args['--listen'].length === 0) {\r\n    // default endpoint\r\n    endpoints = [(s, cb) => s.listen(3000, cb)];\r\n  } else {\r\n    endpoints = args['--listen'];\r\n  }\r\n\r\n  const optionsFiles = [];\r\n  if (args._[0]) optionsFiles.push(args._[0]);\r\n  optionsFiles.push('tsdserver.config.js', 'tsdserver.json');\r\n  let options = await loadOptions(optionsFiles);\r\n\r\n  if (!options) {\r\n    options = {\r\n      ecmaVersion: 2015,\r\n      sourceType: 'module'\r\n    };\r\n  }\r\n\r\n  return {\r\n    endpoints: endpoints,\r\n    options: options\r\n  };\r\n}\r\n\r\nfunction registerShutdown(fn: () => void): void {\r\n  let run = false;\r\n\r\n  const wrapper = () => {\r\n    if (!run) {\r\n      run = true;\r\n      fn();\r\n    }\r\n  };\r\n\r\n  process.on('SIGINT', wrapper);\r\n  process.on('SIGTERM', wrapper);\r\n  process.on('exit', wrapper);\r\n}\r\n\r\nfunction startEndpoint(module: RequestHandler, endpoint: EndPoint): void {\r\n  const server = serve(module);\r\n  server.on('error', err => {\r\n    console.error('tsdserver:', err.stack);\r\n    process.exit(1);\r\n  });\r\n\r\n  endpoint(server, () => {\r\n    registerShutdown(() => server.close());\r\n    const details = server.address();\r\n    // `tsdserver` is designed to run only in production, so\r\n    // this message is perfectly for prod\r\n    if (typeof details === 'string') {\r\n      console.log(`micro: Accepting connections on ${details}`);\r\n    } else if (isAddressInfo(details)) {\r\n      console.log(`micro: Accepting connections on port ${details.port}`);\r\n    } else {\r\n      console.log('micro: Accepting connections');\r\n    }\r\n  });\r\n}\r\n\r\nasync function start(): Promise<void> {\r\n  try {\r\n    const commandLine = await parseCommandLine();\r\n    const listener = createTSDRequestListener(commandLine.options);\r\n    for (const endpoint of commandLine.endpoints) {\r\n      startEndpoint(listener, endpoint);\r\n    }\r\n    registerShutdown(() => console.log('micro: Gracefully shutting down. Please wait...'));\r\n  } catch (e) {\r\n    console.error(e);\r\n  }\r\n}\r\n\r\nexport default { start: start };\r\n"],"names":["isArray","isString","isObject","isRegExp","isFunction","isNumber"],"mappings":"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"}